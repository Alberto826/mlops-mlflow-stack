version: "3.8"

services:

  keycloak_db:
    image: postgres
    restart: always
    volumes:
      - keycloak-vol:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: keycloak_user
      POSTGRES_PASSWORD: keycloak_password
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - auth-network
    labels:
      - "traefik.enable=false"
  
  keycloak:
    image: jboss/keycloak:7.0.1
    hostname: keycloak
    ports:
      - 8081:8080
    environment:
      - DB_VENDOR=POSTGRES
      - DB_ADDR=keycloak_db
      - DB_DATABASE=keycloak_db
      - DB_PORT=5432
      - DB_USER=keycloak_user
      - DB_SCHEMA=public
      - DB_PASSWORD=keycloak_password
      - PROXY_ADDRESS_FORWARDING=true
      - KEYCLOAK_LOGLEVEL=INFO
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=password
    networks:
      - auth-network
      - traefik-public
    depends_on: 
      - traefik
      - keycloak_db    
    deploy:
      mode: replicated
      replicas: 0
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.keycloak.rule=Host(`${AUTH_DOMAIN?Variable AUTH_DOMAIN not set}`)"
        - "traefik.http.routers.keycloak.entrypoints=http"
        - "traefik.http.routers.keycloak.middlewares=https-redirect"
        - "traefik.http.routers.keycloak-https.rule=Host(`${AUTH_DOMAIN?Variable AUTH_DOMAIN not set}`)"
        - "traefik.http.routers.keycloak-https.entrypoints=https"
        - "traefik.http.routers.keycloak-https.tls.certresolver=le"
        - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
    command: ["-b", "0.0.0.0", "-Dkeycloak.profile.feature.docker=enabled"]

volumes:
  keycloak-vol:

networks:
  traefik-public:
    external: true
  auth-network: