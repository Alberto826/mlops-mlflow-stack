version: "3.8"

services:

  traefik:
    image: traefik:v2.8
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-public-certificates:/certificates
    command:
      - --log.level=DEBUG
      - --providers.docker
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `traefik-public`)
      - --providers.docker.exposedbydefault=false
      # - --providers.docker.swarmmode
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --certificatesresolvers.le.acme.email=test@email.com
      # - --certificatesresolvers.le.acme.email=${TRAEFIK_EMAIL?Variable not set}
      - --certificatesresolvers.le.acme.storage=/certificates/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --certificatesresolvers.le.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --accesslog
      - --log
      - --api
    networks:
      - traefik-public
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public
      #- traefik.http.middlewares.admin-auth.basicauth.users=${BASIC_AUTH_USERNAME?Variable not set}:${BASIC_AUTH_HASHED_PASSWORD?Variable not set}
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      - traefik.http.routers.traefik-public-http.rule=Host(`traefik.localhost`)
      # - traefik.http.routers.traefik-public-http.rule=Host(`${TRAEFIK_DOMAIN?Variable not set}`)
      - traefik.http.routers.traefik-public-http.entrypoints=http
      - traefik.http.routers.traefik-public-http.middlewares=https-redirect
      - traefik.http.routers.traefik-public-https.rule=Host(`traefik.localhost`)
      # - traefik.http.routers.traefik-public-https.rule=Host(`${TRAEFIK_DOMAIN?Variable not set}`)
      - traefik.http.routers.traefik-public-https.entrypoints=https
      - traefik.http.routers.traefik-public-https.tls=true
      - traefik.http.routers.traefik-public-https.service=api@internal
      - traefik.http.routers.traefik-public-https.tls.certresolver=le
      #- traefik.http.routers.traefik-public-https.middlewares=admin-auth
      - traefik.http.services.traefik-public.loadbalancer.server.port=8080

  portainer:
    image: portainer/portainer-ce:2.15.0
    command: -H unix:///var/run/docker.sock
    volumes:
      - portainer-data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - traefik
    networks:
      - traefik-public
    deploy:
      restart_policy:
        condition: on-failure
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public
      - traefik.http.routers.portainer-http.rule=Host(`portainer.localhost`)
      # - traefik.http.routers.portainer-http.rule=Host(`${PORTAINER_DOMAIN?Variable not set}`)
      - traefik.http.routers.portainer-http.entrypoints=http
      - traefik.http.routers.portainer-http.middlewares=https-redirect
      - traefik.http.routers.portainer-https.rule=Host(`portainer.localhost`)
      # - traefik.http.routers.portainer-https.rule=Host(`${PORTAINER_DOMAIN?Variable not set}`)
      - traefik.http.routers.portainer-https.entrypoints=https
      - traefik.http.routers.portainer-https.tls.certresolver=le
      - traefik.http.services.portainer.loadbalancer.server.port=9000

volumes:
  traefik-public-certificates:
  portainer-data:

networks:
  traefik-public:
    external: true

    